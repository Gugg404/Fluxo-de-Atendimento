@page "/fluxo/cadastros"
@inject FluxoDeAtendimento.Repositories.ContatoRepository ContatoRepo
@inject NavigationManager NavManager

<h3 class="text-2xl font-bold mb-2">Fluxo - Cadastros</h3>

@if (contato is null)
{
    <p>Nenhum contato identificado. <a href="/identificacao">Clique aqui</a> para começar novamente.</p>
}
else
{
    <div class="bg-gray-50 p-4 rounded border mb-4" style="max-width:600px;">
        <p><strong>Nome:</strong> @contato.Nome</p>
        <p><strong>Usuário:</strong> @contato.Usuario</p>
        <p><strong>Situação:</strong> @contato.Situacao</p>
        <p><strong>Módulo: Cadastros</strong></p>
    </div>

    <p>Selecione o tipo de cadastro com o qual o cliente está relatando dificuldade:</p>
    <div class="d-flex flex-column gap-2 mt-3" style="max-width:200px;">
        <button class="btn btn-warning w-100" @onclick="IrParaProdutos">Produtos</button>
        <button class="btn btn-warning w-100" @onclick="IrParaPessoas">Pessoas</button>
        <button class="btn btn-primary w-100" @onclick="VoltarSuporte">Voltar</button>
    </div>

    <h4 class="mt-6 mb-2 text-lg font-semibold">Histórico de etapas</h4>
    <ul class="list-disc pl-6">
        @foreach (var etapa in ContatoRepo.ObterHistorico())
        {
            <li>@etapa</li>
        }
    </ul>
}

@code {
    private FluxoDeAtendimento.Models.Contato? contato;

    protected override void OnInitialized()
    {
        contato = ContatoRepo.ObterContatoAtual();
        if (contato != null)
        {
            ContatoRepo.RegistrarEtapa("Entrou na etapa de Cadastros");
        }
    }

    private void IrParaProdutos()
    {
        NavManager.NavigateTo("/fluxo/cadastros/produtos");
    }

    private void IrParaPessoas()
    {
        NavManager.NavigateTo("/fluxo/cadastros/pessoas");
    }

    private void VoltarSuporte()
    {
        NavManager.NavigateTo("/fluxo/suporte");
    }
}