@page "/fluxo/finalizacao"
@inject FluxoDeAtendimento.Repositories.ContatoRepository ContatoRepo
@inject NavigationManager NavManager

<h3 class="text-2xl font-bold mb-4">Atendimento Finalizado!</h3>

@if (contato != null)
{
    <div class="bg-gray-50 p-4 rounded border mb-4" style="max-width:600px;">
        <p><strong>Nome:</strong> @contato.Nome</p>
        <p><strong>Usuário:</strong> @contato.Usuario</p>
        <p><strong>Administrador:</strong> @contato.Administrador</p>
        <p><strong>Situação:</strong> @contato.Situacao</p>
        <p><strong>Módulo:</strong> @contato.Modulo</p>
        <p><strong>@contato.SubEtapa</strong></p>

        @if (!string.IsNullOrWhiteSpace(contato.Conclusao))
        {
            <div class="mt-4 p-3 bg-gray-100 rounded border">
                <strong>Conclusão:</strong>
                <p>@contato.Conclusao</p>
            </div>
        }
        <h4 class="mt-4 mb-2 font-semibold">Etapas percorridas:</h4>
        <ul class="list-disc pl-6">
            @foreach (var etapa in historicoEtapas)
            {
                <li>@etapa</li>
            }
        </ul>

        <p class="mt-4 font-semibold text-green-700">• Finalização do atendimento</p>
    </div>

    <button class="bg-blue-600 text-white px-4 py-2 rounded" @onclick="VoltarInicio">
        Voltar ao Início
    </button>
}
else
{
    <p>Não há informações disponíveis do contato.</p>
}

@code {
    private FluxoDeAtendimento.Models.Contato? contato;
    private IReadOnlyList<string> historicoEtapas = Array.Empty<string>();

    protected override void OnInitialized()
    {
        contato = ContatoRepo.ObterContatoAtual();

        if (contato != null)
        {
            ContatoRepo.RegistrarEtapa($"Finalizou atendimento no módulo {contato.Modulo ?? "desconhecido"}");
            historicoEtapas = ContatoRepo.ObterHistorico();
        }
    }

    private void VoltarInicio()
    {
        ContatoRepo.Limpar();
        NavManager.NavigateTo("/identificacao");
    }
}